{   "comment": [
        "example configuration for running local expert on example data.",
        "'results' specify where results should be written",
        "'locations' specify the expert locations",
        "'pred_loc' null (None) will make predictions only at the expert location",
        "TODO: complete the example config"
    ],
    "results": {
        "dir": "/path/to/results/directory",
        "file": "ABC_binned.h5"
    },
    "locations": {
        "file": "/path/to/example/data/locations.csv",
        "col_funcs": {
            "date": {
                "func": "lambda x: x.astype('datetime64[D]')",
                "col_args": "date"
            },
            "t": {
                "func": "lambda x: x.astype('datetime64[D]').astype(float)",
                "col_args": "date"
            }
        },
        "keep_cols": [
            "x",
            "y",
            "t",
            "date",
            "lon",
            "lat"
        ],
        "row_select": [
            {
                "col": "date",
                "comp": "==",
                "val": "2020-03-05"
            },
            {
                "col": "lat",
                "comp": ">=",
                "val": 60
            }
        ],
        "sort_by": "date"
    },
    "data": {
        "data_source": "/path/to/example/data/ABC_binned.h5",
        "table": "data",
        "obs_col": "obs",
        "coords_col": [
            "x",
            "y",
            "t"
        ],
        "local_select": [
            {
                "col": "t",
                "comp": "<=",
                "val": 4
            },
            {
                "col": "t",
                "comp": ">=",
                "val": -4
            },
            {
                "col": [
                    "x",
                    "y"
                ],
                "comp": "<",
                "val": 300000
            }
        ],
        "global_select": [
            {
                "col": "lat",
                "comp": ">=",
                "val": 60
            },
            {
                "loc_col": "t",
                "src_col": "date",
                "func": "lambda x,y: np.datetime64(pd.to_datetime(x+y, unit='D'))"
            }
        ]
    },
    "model": {
        "oi_model": "GPflowGPRModel",
        "init_params": {
            "coords_scale": [
                50000,
                50000,
                1
            ]
        },
        "constraints": {
            "lengthscales": {
                "low": [
                    1e-08,
                    1e-08,
                    1e-08
                ],
                "high": [
                    600000,
                    600000,
                    9
                ]
            }
        }
    },
    "pred_loc": {
        "method": "from_dataframe",
        "df_file": "/path/to/data/locations/2d_xy_grid_5x5km.csv",
        "max_dist": 200000
    },
    "run_kwargs": {
        "store_every": 10,
        "skip_valid_checks_on": [],
        "optimise": true
    }
}